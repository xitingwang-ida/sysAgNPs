devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
library(sysAgNPs)
detach("package:sysAgNPs", unload = TRUE)
remove.packages("sysAgNPs")
library(sysAgNPs)
install.packages("E:/Project/git/sysAgNPs/github/sysAgNPs_1.0.0.tar.gz", repos = NULL, type = "source")
library(sysAgNPs)
dataset <- rio::import("dataset.xlsx")
var_dis <- c("Synthesis methods", "pH", "Temperature (℃)", "Zeta potential (mV)","Size (nm)", "Shape", "Applications")
dis_data <- sys_discretize(dataset, var_dis)
tran_matrix <- sys_tran(dis_data)
tol_iter <- sys_steady(dis_data, tran_matrix)
iter_prob <- sys_iter(dataset, 6, var_dis)
TS_criteria <- sys_eval_cri(dataset, 6, var_dis)
View(TS_criteria)
users_data <- rio::import("users_data.xlsx")
DE <- sys_DE(users_data)
PE <- sys_PE(users_data)
CE <- sys_CE(users_data, dataset)
T_S <- sys_TS(users_data, dataset, 6, var_dis)
sysAgNPs_score <- data.frame(DE = DE$H_pB,
PE = PE$H_pK,
CE = CE$H_pE,
TS = T_S$TS)
sysAgNPs_line_radar_1 <- sys_line_radar(sysAgNPs_score, 1, "sysAgNPs_line_radar/")
sysAgNPs_line_radar_1
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::build()
usethis::use_pkgdown()
pkgdown::build_site()
library(sysAgNPs)
users_data <- rio::import("users_data.xlsx")
DE <- sys_DE(users_data)
View(DE)
max_value <- max(DE$H_pB)
max_row_index <- which(DE$H_pB == max_value)
max_row <- DE[max_row_index, ]
View(max_row)
remove.packages("sysAgNPs")
install.packages("E:/Project/git/sysAgNPs/github/sysAgNPs_1.0.0.tar.gz", repos = NULL, type = "source")
library(devtools)
dataset <- rio::import("dataset.xlsx")
var_dis <- c("Synthesis methods", "pH", "Temperature (℃)", "Zeta potential (mV)","Size (nm)", "Shape", "Applications")
dis_data <- sys_discretize(dataset, var_dis)
dis_data <- sys_discretize(dataset, var_dis)
library(sysAgNPs)
dis_data <- sys_discretize(dataset, var_dis)
detach("package:sysAgNPs", unload = TRUE)
library(sysAgNPs)
dataset <- rio::import("dataset.xlsx")
var_dis <- c("Synthesis methods", "pH", "Temperature (℃)", "Zeta potential (mV)","Size (nm)", "Shape", "Applications")
dis_data <- sys_discretize(dataset, var_dis)
tran_matrix <- sys_tran(dis_data)
tol_iter <- sys_steady(dis_data, tran_matrix)
iter_prob <- sys_iter(dataset, 6, var_dis)
TS_criteria <- sys_eval_cri(dataset, 6, var_dis)
users_data <- rio::import("users_data.xlsx")
DE <- sys_DE(users_data)
PE <- sys_PE(users_data)
CE <- sys_CE(users_data, dataset)
T_S <- sys_TS(users_data, dataset, 6, var_dis)
sysAgNPs_score <- data.frame(DE = DE$H_pB,
PE = PE$H_pK,
CE = CE$H_pE,
TS = T_S$TS)
sysAgNPs_line_radar_1 <- sys_line_radar(sysAgNPs_score, 1, "sysAgNPs_line_radar/")
devtools::build()
detach("package:sysAgNPs", unload = TRUE)
remove.packages("sysAgNPs")
install.packages("E:/Project/git/sysAgNPs/github/sysAgNPs_1.0.0.tar.gz", repos = NULL, type = "source")
library(sysAgNPs)
dataset <- rio::import("dataset.xlsx")
var_dis <- c("Synthesis methods", "pH", "Temperature (℃)", "Zeta potential (mV)","Size (nm)", "Shape", "Applications")
dis_data <- sys_discretize(dataset, var_dis)
tran_matrix <- sys_tran(dis_data)
tol_iter <- sys_steady(dis_data, tran_matrix)
iter_prob <- sys_iter(dataset, 6, var_dis)
TS_criteria <- sys_eval_cri(dataset, 6, var_dis)
users_data <- rio::import("users_data.xlsx")
DE <- sys_DE(users_data)
PE <- sys_PE(users_data)
CE <- sys_CE(users_data, dataset)
T_S <- sys_TS(users_data, dataset, 6, var_dis)
sysAgNPs_score <- data.frame(DE = DE$H_pB,
PE = PE$H_pK,
CE = CE$H_pE,
TS = T_S$TS)
View(sysAgNPs_score)
sysAgNPs_line_radar_1 <- sys_line_radar(sysAgNPs_score, 1, "sysAgNPs_line_radar/")
sysAgNPs_line_radar_1
View(dataset)
View(users_data)
save(dataset, file = "data/dataset.rda")
save(dataset, file = "data/users_data.rda")
data(dataset)
View(dataset)
data(users_data)
load("E:/Project/git/sysAgNPs/github/sysAgNPs/data/users_data.rda")
data(users_data)
data(users_data)
data("users_data")
data(users_data)
users_data <- data(dataset)
class(dataset)
class(users_data)
data(dataset)
users_data <- dataset
devtools::build()
remove.packages("sysAgNPs")
install.packages("E:/Project/git/sysAgNPs/github/sysAgNPs_1.0.0.tar.gz", repos = NULL, type = "source")
library(sysAgNPs)
data(dataset)
var_dis <- c("Synthesis methods", "pH", "Temperature (℃)", "Zeta potential (mV)","Size (nm)", "Shape", "Applications")
dis_data <- sys_discretize(dataset, var_dis)
tran_matrix <- sys_tran(dis_data)
tol_iter <- sys_steady(dis_data, tran_matrix)
iter_prob <- sys_iter(dataset, 6, var_dis)
TS_criteria <- sys_eval_cri(dataset, 6, var_dis)
View(TS_criteria)
data(dataset)
users_data <- dataset
DE <- sys_DE(users_data)
PE <- sys_PE(users_data)
CE <- sys_CE(users_data, dataset)
T_S <- sys_TS(users_data, dataset, 6, var_dis)
sysAgNPs_score <- data.frame(DE = DE$H_pB,
PE = PE$H_pK,
CE = CE$H_pE,
TS = T_S$TS)
sysAgNPs_line_radar_1 <- sys_line_radar(sysAgNPs_score, 1, "sysAgNPs_line_radar/")
sysAgNPs_line_radar_1
sysAgNPs_line_radar_1 <- sys_line_radar(sysAgNPs_score, 1)
sysAgNPs_line_radar_1 <- sys_line_radar(sysAgNPs_score, 1, "sysAgNPs_line_radar/")
View(dataset)
class(dataset)
colnames(dataset)
?everything
?tail
?head
View(dataset)
colnames(dataset)
data(dataset)
View(dataset)
library(dplyr)
binary_dataset <- dataset %>% mutate_all(~ ifelse(is.na(.), 0, 1))
View(binary_dataset)
colnames(binary_dataset)
View(sysAgNPs_score)
# 将数据框保存为 .rda 文件
save(sysAgNPs_score, file = "data/sysAgNPs_score.rda")
data(sysAgNPs_score)
View(sysAgNPs_score)
View(dis_data)
View(tran_matrix)
save(dis_data, file = "data/binary_dataset.rda")
View(binary_dataset)
View(tran_matrix)
save(tran_matrix, file = "data/tran_matrix.rda")
View(binary_dataset)
colnames(A binary dataframe of datasets used to establish evaluation criteria.)
colnames(binary_dataset)
class(tran_matrix)
dim(tran_matrix)
load("E:/Project/git/sysAgNPs/github/sysAgNPs/data/binary_dataset.rda")
load("E:/Project/git/sysAgNPs/github/sysAgNPs/data/tran_matrix.rda")
library(sysAgNPs)
data(dataset)
var_dis <- c("Synthesis methods", "pH", "Temperature (℃)", "Zeta potential (mV)","Size (nm)", "Shape", "Applications")
dis_data <- sys_discretize(dataset, var_dis)
View(dis_data)
tran_matrix <- sys_tran(dis_data)
View(dis_data)
colnames(dis_data)
load("E:/Project/git/sysAgNPs/github/sysAgNPs/data/binary_dataset.rda")
save(dis_data, file = "data/binary_dataset.rda")
data(binary_dataset)
data(tran_matrix)
data(binary_dataset)
data(tran_matrix)
